name: Docker Image CI
on:
  push:
    branches: 'v[0-9]*\.[0-9]*'
    
jobs:
  build:
    if: ${{ startsWith(github.event.head_commit.message, '#NORUN') == false }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Read High or Critical
        id: get-severity
        env:
          commitMsg: ${{ github.event.head_commit.message }}
        run: |
          if [[ $commitMsg == *"CRITICAL"* ]]; then
            echo "severity=CRITICAL" >> "$GITHUB_OUTPUT"
          else
            echo "severity=HIGH" >> "$GITHUB_OUTPUT"
          fi
      - name: checkings
        env:
          severity: ${{ steps.get-severity.outputs.severity }}
        run: echo '$severity'
      - name: Run scanner
        id: scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '1'
          severity: env.SEVERITY
          output: 'output.txt'
      - name: Failed Scan
        if: always() &&  (steps.scan.outcome == 'failure')
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_TEST }}
          SLACK_MESSAGE: 'Failed trivy scan'
      - name: Upload output.txt
        if: always() && (steps.scan.outcome == 'failure')
        uses: adrey/slack-file-upload-action@master
        with:
          token: ${{ secrets.SLACK_TOKEN }}
          path: output.txt
          channel: test-1023
      - name: Build image
        run: |
          docker build -t lxa3002/fortune:${{ github.sha }} .
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.1
        with:
          cosign-release: 'v2.2.0' 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push
        id: build-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: lxa3002/fortune:${{ github.sha }}
      - name: Sign image
        run: |
          echo "$PRIVATE_KEY" > cosign.key
          cosign sign --verbose --yes --key cosign.key "${TAGS}@${DIGEST}"
        env:
          TAGS: "lxa3002/fortune"
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          DIGEST: ${{ steps.build-push.outputs.digest }}
